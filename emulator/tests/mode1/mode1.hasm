.include "../sys/sys.hasm"

start:
	; ==== Set up hblank and vblank interrupt vector ====
	set.l [IRQ_HBLANK], hblank 
	set.l [IRQ_VBLANK], vblank 

	; ==== Initialize VDP                            ====

	; inititalize layer 0
	set.l [VDP0_MODE], 1
	set.l [VDP0_WIDTH], 128
	set.l [VDP0_HEIGHT], 128
	set.l [VDP0_X], 96
	set.l [VDP0_Y], 56
	set.l [VDP0_PAL], pal
        set.l [VDP0_DATA], bitmap
        set.b [VDP0_CKEY], 0
        set.b [VDP0_BMODE], 0
	;set.b [VDP0_FLAGS], VDP_FLAG_LOOPX
	;bor [VDP0_FLAGS], VDP_FLAG_LOOPY
	;bor [VDP0_FLAGS], VDP_FLAG_MIRRORX
	;bor [VDP0_FLAGS], VDP_FLAG_MIRRORY

	; inititalize layer 1
	set.l [VDP1_MODE], 1
	set.l [VDP1_WIDTH], 128
	set.l [VDP1_HEIGHT], 128
	set.l [VDP1_X], 96
	set.l [VDP1_Y], 56
	set.l [VDP1_PAL], pal
        set.l [VDP1_DATA], bitmap
        set.b [VDP1_CKEY], 0
        set.b [VDP1_BMODE], 1

	; ==== Initialize sintab index registers       ====

	set.l x, 0
	set.l z, 0

	; ==== Loop and halt the CPU                   ====
	;         (interrupts will keep waking it up)

loop:
	sys 0
	set.l pc, loop

vblank:
	add z, 8       ; increase index into the sintab
		       ; that X gets reset.l to (to create the wave effect)

	set.l i, x     ; put phase + 90' in x = cos
	add i, 256
	mod i, 1024

	set.l [VDP0_X], [sintab+x] ; update the bg image to "circle", x for sin
	set.l [VDP0_Y], [sintab+i] ; and i for cos

	add [VDP0_X], 96 ; adjust to make the image centered
	add [VDP0_Y], 56

	set.l x, z       ; reset.l the index into the sintab to Z
	set.l pc, pop

hblank:
	mod x, 1024    ; make sure the index stays within the sintab

	; Set the VDP X and Y position registers to the sintab value
	; Plus the width/height of the bitmap - width/height of the screen / 2

	set.l [VDP1_X], [sintab+x]
	add [VDP1_X], 96
	
	set.l [VDP1_Y], [sintab+x]
	add [VDP1_Y], 56
	
	add x, 4

	set.l pc, pop

bitmap: .incbin "bear.dat"
pal:    .incbin "bear.pal"
sintab: .incbin "sintab.dat"
